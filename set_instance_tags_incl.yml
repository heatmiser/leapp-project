---
- name: Set instance tag short_name based on ansible_loop_host
  ansible.builtin.set_fact:
    instances_combine:
      tags:
        # short_name: "{{ ansible_loop_host }}"
        short_name: "{{ inventory_hostname_short }}"
  # delegate_to: localhost

- name: Combine instance extra_var tags with instance tag short_name
  ansible.builtin.set_fact:
    instances: "{{ instances | ansible.builtin.combine(instances_combine, recursive=true) }}"
  # delegate_to: localhost

- name: Get instance details
  ansible.builtin.include_role:
    name: heatmiser.ansible_snapshot.aws
    tasks_from: instance/get_instance_details
    apply:
      delegate_to: localhost

- name: "Display various vars"
  when: instances_details is not none
  ansible.builtin.debug:
    msg:
      - "{{ instance_details.instances | map(attribute='tags.short_name') | list }}"
      - "{{ ansible_distribution_major_version | int }}"

- name: "Display proposed EC2 instance tags"
  when:
    - instances_details is not none
    - instance_details.instances | map(attribute='tags.os_major_version') | first | int + 1 == ansible_distribution_major_version | int
  ansible.builtin.debug:
    msg:
      - "region: {{ ec2_region }}"
      - "resource: {{ item.1 }}"
      - "state: present"
      - "tags.os_major_version: {{ item.2 | int + 1 }}"
  with_together:
    - "{{ instance_details.instances | map(attribute='tags.short_name') | list }}"
    - "{{ instance_details.instances | map(attribute='instance_id') | list }}"
    - "{{ instance_details.instances | map(attribute='tags.os_major_version') | list }}"
  delegate_to: localhost
...
